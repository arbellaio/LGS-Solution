@using LGS.AppProperties
@using LGS.Models.RoleNames
@model  LGS.Models.ViewModels.DashboardViewModels.DashboardViewModel
@{
    ViewBag.Title = "ProfilePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content">

    <div class="row">
        @* SUCCESS ALERT DIV *@
        @if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.SuccessfulRegistration))
        {
            <div id="alert" class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-check"></i> Alert!</h4>
                <strong>Success! </strong> Client is Registered.
            </div>
        }
        else if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.SuccessfulUpdate))
        {
            <div id="alert" class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-check"></i> Alert!</h4>
                <strong>Success! </strong> Client is Updated.
            </div>
        }
        else if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.SuccessfulDelete))
        {
            <div id="alert" class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-check"></i> Alert!</h4>
                <strong>Success! </strong> Client is Deleted.
            </div>
        }
        else if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.SuccessfulBlock))
        {
            <div id="alert" class="alert alert-error alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-check"></i> Alert!</h4>
                <strong>Success! </strong> User has been blocked.
            </div>
        }
        else if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.UserExist))
        {
            <div id="alert" class="alert alert-error alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                <strong>Failure! </strong> User already exist with this email.
            </div>
        }
        else if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.SuccessfulUnBlock))
        {
            <div id="alert" class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-check"></i> Alert!</h4>
                <strong>Success! </strong> User has been Unblocked.
            </div>
        }
        else if (ViewBag.AlertDialog.Equals((int)LgsAlertEnums.InvalidModel))
        {
            <div id="alert" class="alert alert-error alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                <strong>Failure! </strong> Something is wrong with information you entered.
            </div>
        }

        @*SUCCESS ALERT DIV CLOSED*@
        <div class="col-md-3">

            <!-- Profile Image -->
            <div class="box box-primary">
                <div class="box-body box-profile">
                    @if (string.IsNullOrEmpty(@Model.UserVm.User.UserProfilePic))
                    {
                        <img type="file" class="profile-user-img img-responsive img-circle" style="cursor: pointer" id="DetailProfilePic" src="../../LgsImageRepo/ProfileImages/profiledefault.png" alt="User profile picture">
                    }
                    else
                    {
                        var absolutePath = HttpContext.Current.Server.MapPath("~/" + Model.UserVm.User.UserProfilePic);
                        if (!@System.IO.File.Exists(absolutePath))
                        {
                            <img type="file" class="profile-user-img img-responsive img-circle" style="cursor: pointer" id="DetailProfilePic" src="../../LgsImageRepo/ProfileImages/profiledefault.png" alt="User profile picture">
                        }
                        else
                        {
                            <img type="file" class="profile-user-img img-responsive img-circle" style="cursor: pointer" id="DetailProfilePic" src="@Model.UserVm.User.UserProfilePic" alt="User profile picture">
                        }
                    }

                    <h3 class="profile-username text-center">@Model.UserVm.User.FullName</h3>

                    <p class="text-muted text-center" name="UserVm.RoleName">@Model.UserVm.RoleName</p>

                    <ul class="list-group list-group-unbordered">

                        <li class="list-group-item">
                            <b>Email</b> <a class="pull-right">@Model.UserVm.User.Email</a>
                        </li>


                    </ul>

                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
            <!-- About Me Box -->
            @* <div class="box box-primary"> *@
            @*     <div class="box-header with-border"> *@
            @*         <h3 class="box-title">About Me</h3> *@
            @*     </div> *@
            @*     <!-- /.box-header --> *@
            @*     <div class="box-body"> *@
            @*         <strong><i class="fa fa-book margin-r-5"></i> Education</strong> *@
            @* *@
            @*         <p class="text-muted"> *@
            @*             B.S. in Computer Science from the University of Tennessee at Knoxville *@
            @*         </p> *@
            @* *@
            @*         <hr> *@
            @* *@
            @*         <strong><i class="fa fa-map-marker margin-r-5"></i> Location</strong> *@
            @* *@
            @*         <p class="text-muted">Malibu, California</p> *@
            @* *@
            @*         <hr> *@
            @* *@
            @*         <strong><i class="fa fa-pencil margin-r-5"></i> Skills</strong> *@
            @* *@
            @*         <p> *@
            @*             <span class="label label-danger">UI Design</span> *@
            @*             <span class="label label-success">Coding</span> *@
            @*             <span class="label label-info">Javascript</span> *@
            @*             <span class="label label-warning">PHP</span> *@
            @*             <span class="label label-primary">Node.js</span> *@
            @*         </p> *@
            @* *@
            @*         <hr> *@
            @* *@
            @*         <strong><i class="fa fa-file-text-o margin-r-5"></i> Notes</strong> *@
            @* *@
            @*         <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p> *@
            @*     </div> *@
            @*     <!-- /.box-body --> *@
            @* </div> *@
            <!-- /.box -->
        </div>
        <!-- /.col -->
        <div class="col-md-9">
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a href="#activity" data-toggle="tab" aria-expanded="true">Account Details</a>
                    </li>
                    <li class="">
                        <a href="#settings" data-toggle="tab" aria-expanded="false">Reset Password</a>
                    </li>
                    @* <li class=""> *@
                    @*     <a href="#timeline" id="timelineTab" data-toggle="tab" aria-expanded="false">Account Transactions</a> *@
                    @* </li> *@

                </ul>
                <div class="tab-content">
                    @if (User.IsInRole(RoleName.Admin))
                    {
                        <div class="tab-pane active" id="activity">
                            <!-- Post -->
                            @using (Ajax.BeginForm("ProfilePage", "Admin", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary("", new { @class = "text-danger" })

                                <input type="file" id="my_file" name="ProfilePic" disabled style="display: none;" />
                                <input type="hidden" name="UserVm.RoleName" value="@Model.UserVm.RoleName" />

                                <div class="form-group">
                                    <label for="inputName" class="col-sm-2 control-label">Name</label>

                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="inputName" disabled name="UserVm.User.FullName" placeholder="Name" value="@Model.UserVm.User.FullName">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputEmail" class="col-sm-2 control-label">Email</label>

                                    <div class="col-sm-10">
                                        <input type="email" class="form-control" id="inputEmail" name="UserVm.User.Email" disabled placeholder="Email" value="@Model.UserVm.User.Email">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <div class="checkbox icheck">
                                            @Html.CheckBoxFor(m => m.IsEnable, new { @id = "checkBox", @style = "position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px;" })
                                            Enable Edit
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <button type="submit" class="btn btn-danger">Save</button>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    @if (User.IsInRole(RoleName.SubAdmin))
                    {
                        <div class="tab-pane active" id="activity">
                            <!-- Post -->
                            @using (Ajax.BeginForm("ProfilePage", "Admin", new AjaxOptions { HttpMethod = "POST" }, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.ValidationSummary("", new { @class = "text-danger" })

                                <input type="file" id="my_file" name="ProfilePic" disabled style="display: none;" />
                                <input type="hidden" name="UserVm.SubAdmin.Id" value="@Model.UserVm.SubAdmin.Id" />
                                <input type="hidden" name="UserVm.SubAdmin.ProfilePhoto" value="@Model.UserVm.SubAdmin.ProfilePhoto" />
                                <input type="hidden" name="UserVm.SubAdmin.IsBlocked" value="@Model.UserVm.SubAdmin.IsBlocked" />
                                <input type="hidden" name="UserVm.RoleName" value="@Model.UserVm.RoleName" />
                                <div class="form-group">
                                    <label for="inputName" class="col-sm-2 control-label">Name</label>

                                    <div class="col-sm-10">
                                        <input type="text" class="form-control" id="inputName" disabled name="UserVm.User.FullName" placeholder="Name" value="@Model.UserVm.User.FullName">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputEmail" class="col-sm-2 control-label">Email</label>

                                    <div class="col-sm-10">
                                        <input type="email" class="form-control" id="inputEmail" name="UserVm.User.Email" disabled placeholder="Email" value="@Model.UserVm.User.Email">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <div class="checkbox icheck">
                                            @Html.CheckBoxFor(m => m.IsEnable, new { @id = "checkBox", @style = "position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px;" })
                                            Enable Edit
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <button type="submit" class="btn btn-danger">Save</button>
                                    </div>
                                </div>
                            }
                        </div>
                    }

                    <div class="tab-pane" id="settings">
                        <p>Settings Pane!</p>
                    </div>
                    <!-- /.post -->
                </div>
                <!-- /.tab-content -->
            </div>
            <!-- /.nav-tabs-custom -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>


<script src="/Scripts/jquery-3.3.1.js"></script>
<script>
    $(document).ready(function() {

        //Start Image / File Upload Preview Code
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    $('#DetailProfilePic').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#DetailProfilePic").click(function() {
            $("input[id='my_file']").click();
            $("#my_file").change(function() {
                readURL(this);
            });
        });

        //End Image / File Upload Preview Code
        $('input').on('ifChecked',
            function(event) {
                $(this).closest("input").attr('checked', true);
                $("#inputName").prop("disabled", false);
                $("#inputEmail").prop("disabled", false);
                $("#my_file").prop("disabled", false);
                console.log(false);

            });

        // Check-box unchecked click Disabling controls
        $('input').on('ifUnchecked',
            function(event) {
                $(this).closest("input").attr('checked', false);
                $("#inputName").prop("disabled", true);
                $("#inputEmail").prop("disabled", true);
                $("#my_file").prop("disabled", true);
                console.log(true);
            });


        // Color Change on Account Transaction Tab Click
        $('#timelineTab').click(function() {
//            alert('I am in timeline');
            $('.fa-money').each(function() {
                $(this).css('background-color', randomColor());
                $(this).css('color', 'white');
            });
            $('#timeLabel').each(function() {
                $(this).css('background-color', randomColor());
                $(this).css('color', 'white');
            });
            $('#timeLabel2').each(function() {
                $(this).css('background-color', randomColor());
                $(this).css('color', 'white');
            });
        });
        //End Color Change on Account Transaction Tab Click

    });


    // Color Change on Account Transaction Tab Click
    var colors = ['#3c8dbc', '#f39c12', '#D81B60', '#605ca8', '#f56954', '#00a65a'];
    var rand = function() {
        return Math.floor(Math.random() * 6);
    };

    var randomColor = function() {
        var color = colors[rand()];
        return color;
    };
    //End Color Change on Account Transaction Tab Click


</script>

@*SUCCESS ALERT and Check Box DIV JQUERY*@
<script>

    // Start Check box show behavior code
    $(function() {
        $('input').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' /* optional */
        });

    });
    //End Check box show behaviour code

    //Alert Script Code
    setTimeout(function() {
            $("#alert").fadeTo(1000, 200).slideUp(200,
                function() {
                    $("#alert").remove();
                });
        },
        1000); //5000=5 seconds
</script>
@*SUCCESS ALERT and Check Box DIV JQUERY*@